I. Подключение базовой Реакт библиотеки
	1) Добавьте в <head> ссылку на библиотеку React
    		<script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
	2) Добавьте в <head> ссылку на библиотеку React DOM
    		<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
	3) Подключите script.js
	4) Создайте div#app, корневой элемент для приложения
	5) Используйте метод ReactDOM.createRoot(), чтобы создать корневой Реакт элемент
	6) Используя React.createElement(), чтобы создать <h1> элемент, с классом "page-title" с текстом "Заработало!"
	7) Для корневого элемента используйте метод .render(), чтобы отрендерить созданный заголовок

II. Подключение Babel
	1) Добавьте в <head> ссылку на библиотеку Babel (Чтобы использовать JSX)
		<script src="https://unpkg.com/babel-standalone@6/babel.min.js" crossorigin></script>
	2) Добавьте тегу <script>, который подключает файл script.js атрибут type="text/babel", чтобы JSX работал
	3) Используя JSX, создайте <h2> с классом "page-subtitle" текстом "Теперь и вместе с JSX!"
	4) Переделайте .render() для корневого элемента, чтобы выводить оба элемента, <h1> и <h2>
		Чтобы выводить сразу несколько элементов, используйте React.Fragment в качестве обёртки

III. Подготовьте окружение
	1) Установите (Если у вас не установлено) Node.js и NPM
    		Ссылка на скачивание с официального сайта:
    		https://nodejs.org/en/
	2) Для проверки успешной установки, запустите консоль и выполните две команды
		node -v
		npm -v

IV. Создайте проект, используя CRA
	1) Команда для установки
		npx create-react-app

		Команда для перехода в папку 
		cd НАЗВАНИЕПАПКИ
		(cd - Change Directory. Название папки можно начать печатать и нажать Tab, тогда он сам допишет её название.)
	2) Команда для запуска (В созданной папке приложения)
		npm run start
	3) Откройте проект в браузере
	4) Откройте App.js, и удалите внутри return () весь ненужный HTML код
	5) Напишите код, чтобы убедиться, что выводится корректно ваше приложение
		a. Создайте переменную now с помощью объекта Date().
		b. Выведите на экран следующую HTML структуру:
			<h1>Create React App</h2>
			<h2>{Текущая дата}</h2>
			<h3>{Текущее время}</h3>

V. Создайте проект, используя Vite
	1) Запустите в консоли команду
    		npm create vite@latest
    		Следуйте этапам установочника. В проекте мы будем использовать React, JavaScript
	2) Перейдите в консоли в папку созданного проекта и запустите его.
		Команда для запуска
		npm run dev
	3) Откройте проект в браузере
	4) Откройте App.js, и удалите внутри return () весь ненужный HTML код, а также, неиспользованные импортированные значения в файле
	5) Напишите код, чтобы убедиться, что выводится корректно ваше приложение
		a. Создайте переменную now с помощью объекта Date().
		b. Выведите на экран следующую HTML структуру:
			<h1>Vite App</h2>
			<h2>{Текущая дата}</h2>
			<h3>{Текущее время}</h3>
